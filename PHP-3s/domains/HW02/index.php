<?php
/* ************  1  **********
Работа с регистром символов. 
Для решения задач данного блока вам понадобятся следующие функции: strtolower, strtoupper, ucfirst, lcfirst, ucwords. */
// Дана строка 'php'. Сделайте из нее строку 'PHP'.+  
/*
$str ='php';
echo strtoupper($str);
*/
// Дана строка 'PHP'. Сделайте из нее строку 'php'.  +
/*
$str ='PHP';
echo strtolower($str);
*/
// Дана строка 'london'. Сделайте из нее строку 'London'.  +
/*
$str ='london';
echo ucfirst($str);
*/
// Дана строка 'London'. Сделайте из нее строку 'london'.  +
/*
$str ='London';
echo lcfirst($str);
*/
// Дана строка 'london is the capital of great britain'. Сделайте из нее строку 'London Is The Capital Of Great Britain'.  +
/*
$str ='london is the capital of great britain';
echo ucwords($str);
*/
// Дана строка 'LONDON'. Сделайте из нее строку 'London'. +
/*
$str ='LONDON';
echo ucfirst(strtolower($str));
*/

/*  *********** 2 *************
        Работа с strlen 
Для решения задач данного блока вам понадобятся следующие функции: strlen.*/
// Дана строка 'html css php'. Найдите количество символов в этой строке.  +
/*
$str ='html css php';
echo strlen($str);
*/
/*Дана переменная $password, в которой хранится пароль пользователя. 
Если количество символов пароля больше 5-ти и меньше 10-ти, то выведите пользователю сообщение о том,    +
что пароль подходит, иначе сообщение о том, что нужно придумать другой пароль. */
/*
$password = 'parolen';
if(strlen($password)>5&&strlen($password)<10) echo "пароль подходит";
else echo "нужно придумать другой пароль";
*/

/*  ************   3   **************
        Работа с substr 
Для решения задач данного блока вам понадобятся следующие функции: substr. */
// Дана строка 'html css php'. Вырежьте из нее и выведите на экран слово 'html', слово 'css' и слово 'php'.  +
/*
$str ='html css php';
echo substr($str, 0,4);
echo substr($str, 5,3);
echo substr($str, 9,3)."<br>";
echo substr($str, -12,4);
echo substr($str, -7,3);
echo substr($str, -3,3);
*/
// Дана строка. Вырежите и выведите на экран последние 3 символа этой строки.  +
/*
$str ='html css php';
echo substr($str, -3,3);
*/
// Дана строка. Проверьте, что она начинается на 'http://'. Если это так, выведите 'да', если не так - 'нет'. +
/*
$str ="https://html.css.php";
if (substr($str, 0,7)=='http://') echo "да";
else echo "нет";
*/
// Дана строка. Проверьте, что она начинается на 'http://' или на 'https://'. Если это так, выведите 'да', если не так - 'нет'. +
/*
$str ="http://html.css.php";
if (substr($str, 0,7)=='http://'||substr($str, 0,8)=='https://' ) echo "да";
else echo "нет";
*/
// Дана строка. Проверьте, что она заканчивается на '.png'. Если это так, выведите 'да', если не так - 'нет'. +
/*
$str ='html_css.png';
if (substr($str, -4,4)=='.png') echo "да";
else echo "нет";
*/
// Дана строка. Проверьте, что она заканчивается на '.png' или на '.jpg'. Если это так, выведите 'да', если не так - 'нет'. +
/*
$str ='html_css.png';
if (substr($str, -4,4)=='.png'||substr($str, -4,4)=='.jpg') echo "да";
else echo "нет";
*/
/* Дана строка. Если в этой строке более 5-ти символов - вырежите из нее первые 5 символов, добавьте троеточие в конец и выведите на экран. +
Если же в этой строке 5 и менее символов - просто выведите эту строку на экран. */
/*
$str ='html_css.png';
if (strlen($str)>5) echo (substr($str, 0,5))."...";
else echo $str;
*/
/* ***** Работа с str_replace  *********** */
/*Для решения задач данного блока вам понадобятся следующие функции: str_replace. */
// Дана строка '31.12.2013'. Замените все точки на дефисы. +
/*
$str='31.12.2013';
echo str_replace('.','-',$str);
*/
// Дана строка $str. Замените в ней все буквы 'a' на цифру 1, буквы 'b' - на 2, а буквы 'c' - на 3. +
/*
  $arr1=array("a","b","c");
  $arr2=array("1","2","3");
  $str='asbadka__bjfhbkjnvb__cuilkcusdfc';
   echo str_replace($arr1,$arr2,$str);
*/
/* Дана строка с буквами и цифрами, например, '1a2b3c4b5d6e7f8g9h0'. +
   Удалите из нее все цифры. То есть в нашем случае должна получится строка 'abcbdefgh'. */
   /*
   $arr=array("1","2","3","4","5","6","7","8","9","0");
   $str='1a2b3c4b5d6e7f8g9h0';
   echo str_replace($arr,'',$str);
   */
   /* ***** Работа с strtr   *********** */
/*Для решения задач данного блока вам понадобятся следующие функции: strtr.  */
/* Дана строка $str. Замените в ней все буквы 'a' на цифру 1, буквы 'b' - на 2, а буквы 'c' - на 3. +
   Решите задачу двумя способами работы с функцией strtr (массив замен и две строки замен). */
/*
   $arr1=array("a"=>"1","b"=>"2","c"=>"3");
   $str='zxmcnvxcvmnn_asbadka__bjfhbkjnvb__cuilkcusdfc';
   $str1='abc';
   $str2='123';
   echo $str."<br>";
   echo strtr($str,$arr1);
   echo "<br>".$str."<br>";
   echo strtr($str,$str1,$str2);
*/
   /* ******** Работа с substr_replace */
 /*Для решения задач данного блока вам понадобятся следующие функции: substr_replace. */
// Дана строка $str. Вырежите из нее подстроку с 3-го символа (отсчет с нуля), 5 штук и вместо нее вставьте '!!!'. +
/*
$str='zxmcnvxcvmnn_asbadka__bjfhbkjnvb__cuilkcusdfc';
echo $str."<br>";
echo substr_replace($str,'!!!',2,5);
*/
 /* ********* Работа с strpos, strrpos */
 /* Для решения задач данного блока вам понадобятся следующие функции: strpos, strrpos. */
// Дана строка 'abc abc abc'. Определите позицию первой буквы 'b'.  +
/*
$str='abc abc abc';
echo strpos($str,'b');
*/
// Дана строка 'abc abc abc'. Определите позицию последней буквы 'b'.  +
/*
$str='abc abc abc';
echo strrpos($str,'b');
*/
// Дана строка 'abc abc abc'. Определите позицию первой найденной буквы 'b', если начать поиск не с начала строки, а с позиции 3.  +
/*
$str='abc abc abc';
echo strpos($str,'b',3);
*/
// Дана строка 'aaa aaa aaa aaa aaa'. Определите позицию второго пробела. +
/*
$str='aaa aaa aaa aaa aaa';
echo strpos($str,' ',strpos($str,' ')+1);
*/
// Проверьте, что в строке есть две точки подряд. Если это так - выведите 'есть', если не так - 'нет'.  +
/*
$str='aaa aaa a..aa aaa aaa';
if (strpos($str,'..')!=FALSE) {
   echo 'ecmь!';
}
else echo 'нem!';
*/
// Проверьте, что строка начинается на 'http://'. Если это так - выведите 'да', если не так - 'нет'. +
/*
$str='shttp://aaa aaa a..aa aaa aaa';
// echo strpos($str,'http://');
if (strpos($str,'http://')==0 ) {
   echo 'да!';
}
else echo 'нeт!';
*/

  /* ******** Работа с explode, implode ***** */
  /*Для решения задач данного блока вам понадобятся следующие функции: explode, implode. */
/* Дана строка 'html css php'. С помощью функции explode запишите каждое слово этой строки в отдельный элемент массива. +*/
/*
$str='html css php';
print_r(explode(' ',$str));
*/
/* Дан массив с элементами 'html', 'css', 'php'. С помощью функции implode создайте строку из этих элементов, разделенных запятыми. + */
/*
$arr=array('html', 'css', 'php');
echo implode(',',$arr);
*/
// В переменной $date лежит дата в формате '2013-12-31'. Преобразуйте эту дату в формат '31.12.2013'. +
   /*
   $date='2013-12-31';
   echo implode('.',array_reverse(explode('-',$date)));
   */
  /* ******* Работа с str_split  ********** */
  /*Для решения задач данного блока вам понадобятся следующие функции: str_split. */
 // Дана строка '1234567890'. Разбейте ее на массив с элементами '12', '34', '56', '78', '90'.  +
   /*
   $str='1234567890';
   print_r(str_split($str,2));
   */
 // Дана строка '1234567890'. Разбейте ее на массив с элементами '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'. +
 /*   
 $str='1234567890';
    print_r(str_split($str,1));
*/
 // Дана строка '1234567890'. Сделайте из нее строку '12-34-56-78-90' не используя цикл. +
 /*  
   $str='1234567890';
   echo (implode('-',str_split($str,2)));
*/
   /* ******* Работа с trim, ltrim, rtrim ******* */
   /*Для решения задач данного блока вам понадобятся следующие функции: trim, ltrim, rtrim. */
 // Дана строка. Очистите ее от концевых пробелов. +
/*
 $str=' 1234567890 ';
  echo (trim($str, ' '));
*/
 // Дана строка '/php/'. Сделайте из нее строку 'php', удалив концевые слеши.  +
 /*
 $str='/php/';
 echo (trim($str, '/'));
 */
/* Дана строка 'слова слова слова.'. В конце этой строки может быть точка, а может и не быть. 
   Сделайте так, чтобы в конце этой строки гарантировано стояла точка. То есть: если этой точки нет - +
   ее надо добавить, а если есть - ничего не делать. Задачу решите через rtrim без всяких ифов. */
   /*
   $str='слова слова слова....';
   $str=rtrim($str,'.').'.';
   echo $str;
   */
   /* ********* Работа с strrev ********** */
   /*Для решения задач данного блока вам понадобятся следующие функции: strrev.*/ 
 // Дана строка '12345'. Сделайте из нее строку '54321'.  +
 /*  
 $str='12345';
   echo  (strrev($str));
   */
 /* Проверьте, является ли слово палиндромом (одинаково читается во всех направлениях, примеры таких слов: madam, otto, kayak, nun, level).   +   */
 /*
 $str='kayak1';
 $str2=strrev($str);
 if($str==$str2) echo "палиндром";
 else echo "нет";
*/
    /* ********* Работа с str_shuffle ******** */
 /* Для решения задач данного блока вам понадобятся следующие функции: str_shuffle. */
 // Дана строка. Перемешайте символы этой строки в случайном порядке. +
 /*
 $str='1234567890';
 echo(str_shuffle($str));
 */
 /* Создайте строку из 6-ти случайных маленьких латинских букв так, чтобы буквы не повторялись. 
    Нужно сделать так, чтобы в нашей строке могла быть любая латинская буква, а не ограниченный набор.  +  */
/*
      $str='abcdefghijklmnopqrstuvwxvz';
      $str=substr(str_shuffle($str),0,6);
      echo $str;
*/
//2й вариант (надо же, не понятно зачем правда)
    /*
    $str = (chr(rand(97, 122)));  
    for($i = 1; $i < 6; $i++){
       $ch=rand(97, 122);
      if  (strpos($str, chr($ch)) > -1 && strpos($str, chr($ch)) < ($i+1)) $i--;   //бред конечно, но работает правильно
      else $str=$str.(chr($ch));
    }
    echo $str;
*/

    /* ******** Работа с number_format 
    /*Для решения задач данного блока вам понадобятся следующие функции: number_format. */
 // Дана строка '12345678'. Сделайте из нее строку '12 345 678'.  
      /*     
      $str=12345678;
      echo number_format($str, 0, '.', ' ')
      */      
    /* ******** Работа с str_repeat ******* */
  /* Для решения задач данного блока вам понадобятся следующие функции: str_repeat. */
 /* Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 9 рядов, а не 5. 
    Решите задачу с помощью одного цикла и функции str_repeat. 
    x 
    xx 
    xxx 
    xxxx 
    xxxxx */
    /*
    for($i=1;$i<10;$i++){
    echo str_repeat('x',$i);
    echo "<br>";
    }
    */
 /* Нарисуйте пирамиду, как показано на рисунке. Решите задачу с помощью одного цикла и функции str_repeat. 
    1 
    22 
    333 
    4444 
    55555 
    666666 
    7777777 
    88888888 
    999999999 */ 
 /*
 for($i=1;$i<10;$i++){
    echo str_repeat($i,$i);
    echo "<br>";
    }
    */
    /* ******* Работа с strip_tags и htmlspecialchars ************* */ 
 /* Для решения задач данного блока вам понадобятся следующие функции: htmlspecialchars, strip_tags. */
 // Дана строка 'html, <b>php</b>, js'. Удалите теги из этой строки. 
 /*
 $str = 'html, <b>php</b>, js';
 echo strip_tags($str);
 */
 // Дана строка $str. Удалите все теги из этой строки, кроме тегов <b> и <i>. 
 /*
 $str = 'html, <b>php</b>, <i>js';
 echo strip_tags($str, '<b><i>');
 */
 // Дана строка 'html, <b>php</b>, js'. Выведите ее на экран 'как есть': то есть браузер не должен преобразовать <b> в жирный. 
 /*
 $str = 'html, <b>php</b>, js';
 echo htmlspecialchars($str);
 */
     /* ********* Работа с chr и ord ********* */
  /*Для решения задач данного блока вам понадобятся следующие функции: chr, ord. */
 // Узнайте код символов 'a', 'b', 'c', пробела.  
 /*
   echo 'a =>  '.ord('a')."<br>";
   echo 'b =>  '.ord('b')."<br>";
   echo 'c =>  '.ord('c')."<br>";
*/

// Изучите таблицу ASCII. Определите границы, в которых располагаются буквы английского алфавита.  
 //   маленькие латинские -> [97-122] большие -> [65-90]

 // Выведите на экран символ с кодом 33. 
   
   //   echo chr(33);

 /* Запишите в переменную $str случайный символ - большую букву латинского алфавита. 
    Подсказка: с помощью таблицы ASCII определите какие целые числа соответствуют большим буквам латинского алфавита. */
   
   // echo $str=chr(rand(65,90));

 /* Запишите в переменную $str случайную строку $len длиной, состоящую из маленьких букв латинского алфавита. 
    Подсказка: воспользуйтесь циклом for или while.*/
    /*
    $len=10;
    for($i = 0; $i < $len; $i++){
      $ch=rand(97, 122);
      $str=$str.(chr($ch));
   }
   echo $str;
   */
    // Дана буква английского алфавита. Узнайте, она маленькая или большая. 
   /*
    //$ch=b;
    $ch=B;
   if(ord($ch) > 64 && ord($ch)<91 ) echo "БОЛЬШАЯ";
   if(ord($ch) > 96 && ord($ch)<123 ) echo "маленькая";
   */

     /* ********** Работа с strchr, strrchr ************ */ 
/* Для решения задач данного блока вам понадобятся следующие функции: strchr, strrchr. */
// Дана строка 'ab-cd-ef'. С помощью функции strchr выведите на экран строку '-cd-ef'. 
/*
$str='ab-cd-ef';
echo strchr($str, '-');
*/
// Дана строка 'ab-cd-ef'. С помощью функции strrchr выведите на экран строку 'ef'. Показать решение. 
/*
$str='ab-cd-ef';
echo strrchr($str, 'e');
*/
     /* *********** Работа с strstr *********** */ 
 /* Для решения задач данного блока вам понадобятся следующие функции: strstr. */
 // Дана строка 'ab--cd--ef'. С помощью функции strstr выведите на экран строку '--cd--ef'. 
/*
   $str='ab--cd--ef';
   echo strstr($str, '-');
 */
 /*  ******* Задачи  ********* */ 
 /* Преобразуйте строку 'var_test_text' в 'varTestText'. Скрипт, конечно же, должен работать с любыми аналогичными строками. */ 
/*
 $str ='var_test_text';
 $str=str_replace('_',' ',$str);
 $str=ucwords($str);
 $str=str_replace(' ','',$str);
 echo $str;
 */
 /* Дан массив с числами. Выведите на экран все числа, в которых есть цифра 3. */
/*
$arr=array(100,103,106,133,180,113,119,456,453,354);
//echo count($arr);
for($i=0;$i<count($arr); $i++)
{
   if(strpbrk($arr[$i], 3)) echo $arr[$i]."<br>";   
}
*/
//---------------------------------------------------------
//        МАНИАКАЛЬНАЯ ДОМАШКА. ОДНОЗНАЧНО!
//---------------------------------------------------------
 ?>
 