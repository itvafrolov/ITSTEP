Array - класс

Предоставляет методы для создания, изменения, поиска и сортировки массивов, то есть выступает в роли базового класса для всех массивов в среде CLR.

Иерархия наследования
System.Object 
  System.Array
Пространство имен:  System

		Свойства

 IsFixedSize	Получает значение, показывающее, имеет ли список Array фиксированный размер.
 IsReadOnly	Получает значение, указывающее, доступен ли объект Array только для чтения.
 IsSynchronized	Получает значение, показывающее, является ли доступ к коллекции Array синхронизированным (потокобезопасным).
 Length		Получает 32-разрядное целое число, представляющее общее число элементов во всех измерениях массива Array.
 LongLength	Получает 64-разрядное целое число, представляющее общее число элементов во всех измерениях массива Array.
 Rank		Получает ранг (размерность) объекта Array. Например, одномерный массив возвращает 1, двухмерный массив возвращает 2 и т д
 SyncRoot	Получает объект, который может использоваться для синхронизации доступа к объекту Array.

		Методы

 AsReadOnly<T>	Возвращает для заданного массива доступную только для чтения программу-оболочку.
 BinarySearch(Array, Object)	Выполняет поиск заданного элемента во всем отсортированном одномерном массиве, используя интерфейс IComparable, реализуемый каждым элементом массива и заданным объектом.
 BinarySearch(Array, Object, IComparer)	Выполняет поиск значения во всем отсортированном одномерном массиве, используя заданный интерфейс IComparer.
 BinarySearch(Array, Int32, Int32, Object)	Выполняет поиск значения в диапазоне элементов отсортированного одномерного массива, используя интерфейс IComparable, реализуемый каждым элементом массива и заданным значением.
 BinarySearch(Array, Int32, Int32, Object, IComparer)	Выполняет поиск значения в диапазоне элементов отсортированного одномерного массива, используя заданный интерфейс IComparer.
 BinarySearch<T>(T[], T)	Выполняет поиск заданного элемента во всем отсортированном одномерном массиве, используя универсальный интерфейс IComparable<T>, реализуемый каждым элементом массива Array и заданным объектом.
 BinarySearch<T>(T[], T, IComparer<T>)	Выполняет поиск значения во всем отсортированном одномерном массиве, используя заданный универсальный интерфейс IComparer<T>.
 BinarySearch<T>(T[], Int32, Int32, T)	Выполняет поиск значения в диапазоне элементов отсортированного одномерного массива, используя универсальный интерфейс IComparable<T>, реализуемый каждым элементом массива Array и заданным значением.
 BinarySearch<T>(T[], Int32, Int32, T, IComparer<T>)	Выполняет поиск значения в диапазоне элементов отсортированного одномерного массива, используя заданный универсальный интерфейс IComparer<T>.
 Clear	Присваивает элементам массива значение 0, false или null, в зависимости от типа элементов
 Clone	Создает неполную копию массива Array.
 ConstrainedCopy	Копирует диапазон элементов из массива Array, начиная с заданного индекса источника, и вставляет его в другой массив Array, начиная с заданного индекса назначения. Гарантирует, что в случае невозможности успешно скопировать весь диапазон, все изменения будут отменены.
 ConvertAll<TInput, TOutput>	Преобразует массив одного типа в массив другого типа.
 Copy(Array, Array, Int32)	Копирует диапазон элементов из массива Array, начиная с первого элемента, и вставляет его в другой массив Array, также начиная с первого элемента. Длина задается как 32-разрядное целое число.
 Copy(Array, Array, Int64)	Копирует диапазон элементов из массива Array, начиная с первого элемента, и вставляет его в другой массив Array, также начиная с первого элемента. Длина задается как 64-разрядное целое число.
 Copy(Array, Int32, Array, Int32, Int32)	Копирует диапазон элементов из массива Array, начиная с заданного индекса источника, и вставляет его в другой массив Array, начиная с заданного индекса назначения. Длина и индексы задаются как 32-разрядные целые числа.
 Copy(Array, Int64, Array, Int64, Int64)	Копирует диапазон элементов из массива Array, начиная с заданного индекса источника, и вставляет его в другой массив Array, начиная с заданного индекса назначения. Длина и индексы задаются как 64-разрядные целые числа.
 CopyTo(Array, Int32)	Копирует все элементы текущего одномерного массива в заданный одномерный массив начиная с указанного индекса в массиве назначения. Индекс задается как 32-разрядное целое число.
 CopyTo(Array, Int64)	Копирует все элементы текущего одномерного массива в заданный одномерный массив начиная с указанного индекса в массиве назначения. Индекс задается как 64-разрядное целое число.
 CreateInstance(Type, Int32)	Создает одномерный массив Array заданного типа Type и длины, индексация которого начинается с нуля.
 CreateInstance(Type, Int32[])	Создает многомерный массив Array заданного типа Type с заданными длинами по измерениям и индексацией, начинающейся с нуля. Длины по измерениям задаются в массиве 32-разрядных целых чисел.
 CreateInstance(Type, Int64[])	Создает многомерный массив Array заданного типа Type с заданными длинами по измерениям и индексацией, начинающейся с нуля. Длины по измерениям задаются в массиве 64-разрядных целых чисел.
 CreateInstance(Type, Int32, Int32)	Создает двумерный массив Array заданного типа Type с заданными длинами по измерениям и индексацией, начинающейся с нуля.
 CreateInstance(Type, Int32[], Int32[])	Создает многомерный массив Array заданного типа Type с заданными длинами по измерениям и нижними границами.
 CreateInstance(Type, Int32, Int32, Int32)	Создает трехмерный массив Array заданного типа Type с заданными длинами по измерениям и индексацией, начинающейся с нуля.
 Equals(Object)	Определяет, равен ли заданный объект текущему объекту. (Унаследовано от Object.)
 Exists<T>	Определяет, содержит ли заданный массив элементы, удовлетворяющие условиям указанного предиката.
 Finalize	Позволяет объекту попытаться освободить ресурсы и выполнить другие операции очистки, перед тем как объект будет утилизирован в процессе сборки мусора. (Унаследовано от Object.)
 Find<T>	Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает первое найденное вхождение в пределах всего списка Array.
 FindAll<T>	Извлекает все элементы, удовлетворяющие условиям указанного предиката.
 FindIndex<T>(T[], Predicate<T>)	Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс первого найденного вхождения в пределах всего списка Array.
 FindIndex<T>(T[], Int32, Predicate<T>)	Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс первого вхождения в диапазоне элементов списка Array, начиная с заданного индекса и заканчивая последним элементом.
 FindIndex<T>(T[], Int32, Int32, Predicate<T>)	Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс первого вхождения в диапазоне элементов списка Array, начинающемся с заданного индекса и содержащем указанное число элементов.
 FindLast<T>	Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает последнее найденное вхождение в пределах всего списка Array.
 FindLastIndex<T>(T[], Predicate<T>)	Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс последнего найденного вхождения в пределах всего списка Array.
 FindLastIndex<T>(T[], Int32, Predicate<T>)	Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс последнего вхождения в диапазоне элементов списка Array, начиная с первого элемента и заканчивая элементом с заданным индексом.
 FindLastIndex<T>(T[], Int32, Int32, Predicate<T>)	Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс последнего вхождения в диапазоне элементов списка Array, содержащем указанное число элементов и заканчивающемся элементом с заданным индексом.
 ForEach<T>	Выполняет указанное действие с каждым элементом указанного массива.
 GetEnumerator	Возвращает объект IEnumerator для массива Array.
 GetHashCode	Играет роль хэш-функции для определённого типа.(Унаследовано от Object.)
 GetLength	Получает 32-разрядное целое число, представляющее количество элементов в заданном измерении массива Array.
 GetLongLength	Получает 64-разрядное целое число, представляющее количество элементов в заданном измерении массива Array.
 GetLowerBound	Получает Индекс первого элемента заданного измерения в массиве.
 GetType	Возвращает объект Type для текущего экземпляра. (Унаследовано от Object.)
 GetUpperBound	Получает Индекс последнего элемента заданного измерения в массиве.
 GetValue(Int32)	Получает значение, хранящееся в указанной позиции одномерного массива Array. Индекс задается как 32-разрядное целое число.
 GetValue(Int32[])	Получает значение, хранящееся в указанной позиции многомерного массива Array. Индексы задаются как массив 32-разрядных целых чисел.
 GetValue(Int64)	Получает значение, хранящееся в указанной позиции одномерного массива Array. Индекс задается как 64-разрядное целое число.
 GetValue(Int64[])	Получает значение, хранящееся в указанной позиции многомерного массива Array. Индексы задаются как массив 64-разрядных целых чисел.
 GetValue(Int32, Int32)	Получает значение в заданной позиции двухмерного массива Array. Индексы задаются в виде 32-разрядных целых чисел.
 GetValue(Int64, Int64)	Получает значение в заданной позиции двухмерного массива Array. Индексы задаются в виде 64-разрядных целых чисел.
 GetValue(Int32, Int32, Int32)	Получает значение, хранящееся в указанной позиции трехмерного массива Array. Индексы задаются в виде 32-разрядных целых чисел.
 GetValue(Int64, Int64, Int64)	Получает значение, хранящееся в указанной позиции трехмерного массива Array. Индексы задаются в виде 64-разрядных целых чисел.
 IndexOf(Array, Object)	Выполняет поиск заданного объекта внутри всего одномерного массива Array и возвращает индекс его первого вхождения.
 IndexOf(Array, Object, Int32)	Выполняет поиск указанного объекта и возвращает индекс первого вхождения в диапазоне элементов одномерного массива Array, начинающемся с элемента с заданным индексом и заканчивающемся последним элементом.
 IndexOf(Array, Object, Int32, Int32)	Выполняет поиск указанного объекта и возвращает индекс первого вхождения в диапазоне элементов одномерного массива Array, начинающемся с элемента с заданным индексом и содержащем указанное число элементов.
 IndexOf<T>(T[], T)	Выполняет поиск указанного объекта и возвращает индекс первого вхождения во всем массиве Array.
 IndexOf<T>(T[], T, Int32)	Выполняет поиск указанного объекта и возвращает индекс первого вхождения в диапазоне элементов массива Array, начиная с элемента с заданным индексом и заканчивая последним элементом.
 IndexOf<T>(T[], T, Int32, Int32)	Выполняет поиск указанного объекта и возвращает индекс первого вхождения в диапазоне элементов массива Array, начинающемся с элемента с заданным индексом и содержащем указанное число элементов.
 Initialize	Инициализирует каждый элемент массива Array типа значения путем вызова конструктора по умолчанию для типа значений.
 LastIndexOf(Array, Object)	Выполняет поиск заданного объекта и возвращает индекс его последнего вхождения внутри всего одномерного массива Array.
 LastIndexOf(Array, Object, Int32)	Выполняет поиск указанного объекта и возвращает индекс его последнего вхождения в диапазоне элементов одномерного массива Array, начинающемся с первого элемента и заканчивающемся элементом с заданным индексом.
 LastIndexOf(Array, Object, Int32, Int32)	Выполняет поиск указанного объекта и возвращает индекс последнего вхождения в диапазоне элементов одномерного массива Array, содержащем указанное число элементов и заканчивающемся элементом с заданным индексом.
 LastIndexOf<T>(T[], T)	Выполняет поиск указанного объекта и возвращает индекс последнего вхождения во всем массиве Array.
 LastIndexOf<T>(T[], T, Int32)	Выполняет поиск указанного объекта и возвращает индекс последнего вхождения в диапазоне элементов массива Array, начиная с первого элемента и заканчивая элементом с заданным индексом.
 LastIndexOf<T>(T[], T, Int32, Int32)	Выполняет поиск указанного объекта и возвращает индекс последнего вхождения в диапазоне элементов массива Array, содержащем указанное число элементов и заканчивающемся в позиции с указанным индексом.
 MemberwiseClone	Создает неполную копию текущего объекта Object. (Унаследовано от Object.)
 Resize<T>	Изменяет количество элементов в одномерном массиве до указанной величины.
 Reverse(Array)	Изменяет порядок элементов во всем одномерном массиве Array на обратный.
 Reverse(Array, Int32, Int32)	Изменяет последовательность элементов в диапазоне элементов одномерного массива Array на обратную.
 SetValue(Object, Int32)	Присваивает значение элементу, находящемуся в указанной позиции одномерного массива Array. Индекс задается как 32-разрядное целое число.
 SetValue(Object, Int32[])	Присваивает значение элементу, находящемуся в указанной позиции многомерного массива Array. Индексы задаются как массив 32-разрядных целых чисел.
 SetValue(Object, Int64)	Присваивает значение элементу, находящемуся в указанной позиции одномерного массива Array. Индекс задается как 64-разрядное целое число.
 SetValue(Object, Int64[])	Присваивает значение элементу, находящемуся в указанной позиции многомерного массива Array. Индексы задаются как массив 64-разрядных целых чисел.
 SetValue(Object, Int32, Int32)	Присваивает значение элементу, находящемуся в указанной позиции двухмерного массива Array. Индексы задаются в виде 32-разрядных целых чисел.
 SetValue(Object, Int64, Int64)	Присваивает значение элементу, находящемуся в указанной позиции двухмерного массива Array. Индексы задаются в виде 64-разрядных целых чисел.
 SetValue(Object, Int32, Int32, Int32)	Присваивает значение элементу, находящемуся в указанной позиции трехмерного массива Array. Индексы задаются в виде 32-разрядных целых чисел.
 SetValue(Object, Int64, Int64, Int64)	Присваивает значение элементу, находящемуся в указанной позиции трехмерного массива Array. Индексы задаются в виде 64-разрядных целых чисел.
 Sort(Array)	Сортирует элементы во всем одномерном массиве Array, используя реализацию интерфейса IComparable каждого элемента массива Array.
 Sort(Array, Array)	Сортирует пару одномерных объектов Array (один содержит ключи, а другой — соответствующие элементы) по ключам в первом массиве Array, используя реализацию интерфейса IComparable каждого ключа.
 Sort(Array, IComparer)	Сортирует элементы в одномерном массиве Array, используя заданный интерфейс IComparer.
 Sort(Array, Array, IComparer)	Сортирует пару одномерных объектов Array (один содержит ключи, а другой — соответствующие элементы) по ключам в первом массиве Array, используя заданный интерфейс IComparer.
 Sort(Array, Int32, Int32)	Сортирует элементы в диапазоне элементов одномерного массива Array с помощью реализации интерфейса IComparable каждого элемента массива Array.
 Sort(Array, Array, Int32, Int32)	Сортирует диапазон элементов в паре одномерных объектов Array (один содержит ключи, а другой — соответствующие элементы) по ключам в первом массиве Array, используя реализацию интерфейса IComparable каждого ключа.
 Sort(Array, Int32, Int32, IComparer)	Сортирует элементы в диапазоне элементов одномерного массива Array, используя заданный интерфейс IComparer.
 Sort(Array, Array, Int32, Int32, IComparer)	Сортирует диапазон элементов в паре одномерных объектов Array (один содержит ключи, а другой — соответствующие элементы) по ключам в первом массиве Array, используя заданный интерфейс IComparer.
 Sort<T>(T[])	Сортирует элементы во всем массиве Array, используя реализацию универсального интерфейса IComparable<T> каждого элемента массива Array.
 Sort<T>(T[], IComparer<T>)	Сортирует элементы в одномерном массиве Array, используя заданный универсальный интерфейс IComparer<T>.
 Sort<T>(T[], Comparison<T>)	Сортирует элементы массива Array с использованием указанного объекта Comparison<T>.
 Sort<T>(T[], Int32, Int32)	Сортирует элементы в диапазоне элементов массива Array, используя реализацию универсального интерфейса IComparable<T> каждого элемента массива Array.
 Sort<T>(T[], Int32, Int32, IComparer<T>)	Сортирует элементы в диапазоне элементов массива Array, используя заданный универсальный интерфейс IComparer<T>.
 Sort<TKey, TValue>(TKey[], TValue[])	Сортирует пару одномерных объектов Array (один содержит ключи, а другой — соответствующие элементы) по ключам в первом массиве Array, используя реализацию универсального интерфейса IComparable<T> каждого ключа.
 Sort<TKey, TValue>(TKey[], TValue[], IComparer<TKey>)	Сортирует пару одномерных объектов Array (один содержит ключи, а другой — соответствующие элементы) по ключам в первом массиве Array, используя заданный универсальный интерфейс IComparer<T>.
 Sort<TKey, TValue>(TKey[], TValue[], Int32, Int32)	Сортирует диапазон элементов в паре объектов Array (один содержит ключи, а другой — соответствующие элементы) по ключам в первом массиве Array, используя реализацию универсального интерфейса IComparable<T> каждого ключа.
 Sort<TKey, TValue>(TKey[], TValue[], Int32, Int32, IComparer<TKey>)	Сортирует диапазон элементов в паре объектов Array (один содержит ключи, а другой — соответствующие элементы) по ключам в первом массиве Array, используя заданный универсальный интерфейс IComparer<T>.
 ToString	Возвращает строку, представляющую текущий объект. (Унаследовано от Object.)
 TrueForAll<T>	Определяет, все ли элементы массива удовлетворяют условиям указанного предиката.